#ifndef LLVM_HS32INSTPRINTER_H
#define LLVM_HS32INSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"
#include "MCTargetDesc/HS32MCTargetDesc.h"

namespace llvm {

class HS32InstPrinter : public MCInstPrinter {
public:
  HS32InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                  const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

private:
  // Used by TableGen
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  // Generated by TableGen
  static const char *getRegisterName(unsigned RegNo,
                                     unsigned AltIdx = HS32::NoRegAltName);
  std::pair<const char*, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
};

} // end namespace llvm

#endif // LLVM_HS32INSTPRINTER_H
